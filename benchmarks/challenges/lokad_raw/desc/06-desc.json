{
    "question": "///06-desc\n///The desc keyword is an option for a process call. When desc is present, the ordering of the iteration is inverted.\n///When the scan takes a tuple, the desc option can be independently applied to every element of the tuple, i.e. scan [a desc, b, c desc].\n\n///The desc keyword is an option for a table tile block. When desc is present, the ordering of the table is inverted.\n///When the order by takes a tuple as argument, the desc keyword can remain outside the tuple: order by [a, b, c] desc\n///or applied individually inside the tuple to offer an ordering control over each element that makes the tuple: order by [a desc, b, c desc].\n\n///1. Can you enumerate the Items in the order in which they will appear in the table following the script below?\n///2a. What if instead of rank, the rankrev function was used? How could you have written the show in a different\n///way to achieve the same result?\n\ntable Items = with\n  [| as Item,         as Cost,  as Damage,  as Strength      |]\n  [| \"Tango\",         90     ,    0       ,  0               |]\n  [| \"Observer ward\", 0      ,    0       ,  0               |]\n  [| \"Bracer\",        505    ,    0       ,  5               |]\n  [| \"Reaver\",        2700   ,    0       ,  25              |]\n  [| \"Divine rapier\", 5600   ,    100     ,  0               |]\n\nItems.Rk = rankrev() scan [Items.Strength desc, Items.Cost desc, Items.Damage]\n\nshow table \"Items\" with\n  Items.Rk\n  Items.Item\n  Items.Damage\n  Items.Strength\n  Items.Cost\n  order by Items.Rk desc",
    "answer": "///ANSWER\n///1. Observer ward > Tango > Divine rapier > Bracer > Reaver\n///2a. Reaver > Bracer > Divine rapier > Tango > Observer ward\n///2b.\n//show table \"Items\" with\n  // Items.Rk\n  // Items.Item\n  // Items.Damage\n  // Items.Strength\n  // Items.Cost\n  // order by Items.Rk ///removing the desc here yield the same result as using rankrev() instead of rank()",
    "ref": "desc_keyword",
    "type": "QA"
}
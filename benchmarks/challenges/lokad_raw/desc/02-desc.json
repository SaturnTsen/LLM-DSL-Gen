{
    "question": "02-desc\n\nThe desc keyword is an option for a process call. When desc is present, the ordering of the iteration is inverted.\nWhen the scan takes a tuple, the desc option can be independently applied to every element of the tuple, i.e. scan [a desc, b, c desc].\n\nThe desc keyword is an option for a table tile block. When desc is present, the ordering of the table is inverted.\nWhen the order by takes a tuple as argument, the desc keyword can remain outside the tuple: order by [a, b, c] desc\nor applied individually inside the tuple to offer an ordering control over each element that makes the tuple: order by [a desc, b, c desc].\n\nConsidering the table Items as given below:\n table Items = with\n   [| as Item,         as Cost|]\n   [| \"Tango\",         90     |]\n   [| \"Observer ward\", 0      |]\n   [| \"Bracer\",        505    |]\n   [| \"Reaver\",        2700   |]\n   [| \"Divine rapier\", 5600   |]\n\nRank the Items according to their Cost from the cheapest to the most expensive i.e rank 1 being the cheapest.\nYou must use the rankrev function. Display the table Items sorted by ascending rank.",
    "answer": "```envision\ntable Items = with\n  [| as Item,         as Cost|]\n  [| \"Tango\",         90     |]\n  [| \"Observer ward\", 0      |]\n  [| \"Bracer\",        505    |]\n  [| \"Reaver\",        2700   |]\n  [| \"Divine rapier\", 5600   |]\n\nItems.Rk = rankrev() scan [Items.Cost desc] //rankrev() is ranking by descending order hence rankrev() scan [... desc] is ranking by ascending order!\n\nshow table \"Items\" with\n  Items.Rk\n  Items.Item\n  Items.Cost\n  order by Items.Rk\n```",
    "ref": "desc",
    "type": "coding"
}
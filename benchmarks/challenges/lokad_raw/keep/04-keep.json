{
    "question": "///04-keep\n///The keyword keep has two uses in Envision, either to avoid an identation, or to define the state of a process.\n///When the keyword keep appears at the start of a where statement, the filter applies until the end of scope.\n///When the keyword keep appears at the start of a span statement, the UNfilter applies until the end of the scope.\n///At the beginning of a process block, the variables that are part of the state of the process can be declared with the keyword keep.\n///In a for loop that enumerates the values of a column, the keyword keep is used to declare the variables part of the state of the loop.\n///Idem, with a each loop, that enumerates the lines of a table\n\n///Consider the table named \"Products\" with primary dimension \"ref\" and three additional vectors \"Product\", \"Color\", \"Price\":\n/// - ref: uuid of the product, primary dimension of the table\n/// - Product: the product type\n/// - Color: the color of the product\n/// - Price: the unit price of the product\n///Consider additionally, the table named \"Orders\" with primary dimension \"orderid\" with secondary dimension \"ref\" and additional vectors \"OrderDate\", \"Qty\":\n///- ref: uuid of the product, secondary dimension of the table\n///- OrderDate: the date at which the product was ordered\n///- Qty: the quantity ordered for\n///Create the date dimension using keep span. The date dimensions should span from the first day of the year of the smallest OrderDate found in Orders to the last day of NEXT year of the largest OrderDate found in Orders.\n///The period strictly after the largest OrderDate found in Orders is referenced as the future.\n///The period before the largest OrderDate found in Orders is referenced as the past.\n///Compute the past daily sales amount.\n///Assuming future sales are shifted 365 days from past ones and doubled in amount, complete the daily sales table.\n///Display a linechart with daily sales amount (past and future).",
    "answer": "```envision\nkeep span date=[yearStart(min(Orders.OrderDate))..yearEnd(year(max(Orders.OrderDate))+1)] // creates the date dimension with correct span\nexpect Orders.date = Orders.OrderDate // creates the date dimension as a secondary dimension in Orders table\n\nDay.IsPast = date <= max(Orders.OrderDate)\nDay.IsFuture = date > max(Orders.OrderDate)\n\nDay.WeeklySales_Past = if Day.IsPast then sum(Orders.Qty * Products.Price) else 0\nDay.WeeklySales_Future = if Day.IsFuture then Day.WeeklySales_Past[-365] * 2 else 0 // using lag operator to fetch \"past\" year sales, *2 since doubled\n\nDay.WeeklySales = if Day.IsPast then Day.WeeklySales_Past else Day.WeeklySales_Future\n\nshow linechart \"Weekly sales amount\" with\n  Day.WeeklySales as \"Amount sold\" {unit:\" â‚¬\"}\n  group by date\n```",
    "ref": "",
    "type": "coding"
}